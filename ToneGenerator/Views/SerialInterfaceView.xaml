<Window x:Class="ToneGenerator.SerialInterfaceView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:ToneGenerator.ViewModels"
        d:DataContext="{d:DesignInstance local:ConnectionViewModel}"
        mc:Ignorable="d"
        Title="SerialInterfaceView" Height="450" Width="800">
    
    <Grid Width="Auto">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="5*"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="20"/>
            <RowDefinition Height="4*"/>
            <RowDefinition Height="3*"/>
            <RowDefinition Height="20"/>
        </Grid.RowDefinitions>
        <DockPanel Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="3">
            <Menu DockPanel.Dock="Top" Grid.Column="0" Grid.ColumnSpan="3">
                <MenuItem Header="Connection">
                    <MenuItem Header="Settings" Command="" Click="MenuItem_Click"/>
                    <MenuItem Header="Connect" Command="{Binding StartCommand}"/>
                </MenuItem>
            </Menu>
        </DockPanel>
        <DockPanel Grid.Row="3" Grid.Column="0" Grid.ColumnSpan="3">
            <StatusBar>
                <TextBlock>Connection Status</TextBlock>
                <Separator></Separator>
                <TextBlock Text="{Binding ConnectedString}"></TextBlock>
            </StatusBar>
        </DockPanel>
        <TextBox Margin="10" Grid.Column="1" Grid.Row="1" VerticalScrollBarVisibility="Auto"  VerticalContentAlignment="Top" IsReadOnly="True" Text="{Binding Console}"  TextWrapping="Wrap"/>
        <Grid  Grid.Column="1" Grid.Row="2" Margin="20">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"></ColumnDefinition>
                <ColumnDefinition Width="*"></ColumnDefinition>
                <ColumnDefinition Width="*"></ColumnDefinition>
                <ColumnDefinition Width="*"></ColumnDefinition>
                <ColumnDefinition Width="*"></ColumnDefinition>
                <ColumnDefinition Width="*"></ColumnDefinition>
                <ColumnDefinition Width="*"></ColumnDefinition>
            </Grid.ColumnDefinitions>
            <RepeatButton Margin="10" Grid.Column="0" Grid.Row="1" Content="C" Command="{Binding ButtonPress}" CommandParameter="{Binding RelativeSource = {RelativeSource Self}, Path=Content}" Delay="10" Interval="10"/>
            <RepeatButton Margin="10" Grid.Column="1" Grid.Row="1" Content="B" Command="{Binding ButtonPress}" CommandParameter="{Binding RelativeSource = {RelativeSource Self}, Path=Content}" Delay="10" Interval="10"/>
            <RepeatButton Margin="10" Grid.Column="2" Grid.Row="1" Content="A" Command="{Binding ButtonPress}" CommandParameter="{Binding RelativeSource = {RelativeSource Self}, Path=Content}" Delay="10" Interval="10"/>
            <RepeatButton Margin="10" Grid.Column="3" Grid.Row="1" Content="G" Command="{Binding ButtonPress}" CommandParameter="{Binding RelativeSource = {RelativeSource Self}, Path=Content}" Delay="10" Interval="10"/>
            <RepeatButton Margin="10" Grid.Column="4" Grid.Row="1" Content="F" Command="{Binding ButtonPress}" CommandParameter="{Binding RelativeSource = {RelativeSource Self}, Path=Content}" Delay="10" Interval="10"/>
            <RepeatButton Margin="10" Grid.Column="5" Grid.Row="1" Content="E" Command="{Binding ButtonPress}" CommandParameter="{Binding RelativeSource = {RelativeSource Self}, Path=Content}" Delay="10" Interval="10"/>
            <RepeatButton Margin="10" Grid.Column="6" Grid.Row="1" Content="D" Command="{Binding ButtonPress}" CommandParameter="{Binding RelativeSource = {RelativeSource Self}, Path=Content}" Delay="10" Interval="10"/>
        </Grid>
    </Grid>
</Window>
